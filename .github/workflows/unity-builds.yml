name: Build and Release project
on: [push, pull_request]
jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
          - iOS
          - Android
          - WebGL
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - name: Prepare Directory for Zipping
        run: |
          mkdir -p build/
          ls -alh
      - name: Change Ownership of Build Directory
        run: sudo chown -R runner:docker build/
      - name: Zip Artifacts
        run: |
          zip -r build/${{ matrix.targetPlatform }}.zip build/${{ matrix.targetPlatform }} || true
          ls -alh build/
      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}.zip
      - name: Create and Push Tag Using Run Number
        id: create_tag
        run: |
          NEW_TAG="build-${{ github.run_number }}"
          echo "Creating new tag: $NEW_TAG"
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "::set-output name=tag::$NEW_TAG"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: Release ${{ steps.create_tag.outputs.tag }} for ${{ matrix.targetPlatform }}
          draft: false
          prerelease: false
          body: |
            Release of ${{ matrix.targetPlatform }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # Now correctly references the output
          asset_path: ./build/${{ matrix.targetPlatform }}.zip
          asset_name: ${{ matrix.targetPlatform }}.zip
          asset_content_type: application/zip

